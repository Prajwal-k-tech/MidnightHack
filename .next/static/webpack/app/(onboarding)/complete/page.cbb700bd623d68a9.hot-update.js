"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(onboarding)/complete/page",{

/***/ "(app-pages-browser)/./src/lib/stores/walletStore.ts":
/*!***************************************!*\
  !*** ./src/lib/stores/walletStore.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useWalletStore: function() { return /* binding */ useWalletStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n\nconst useWalletStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)((set, get)=>({\n        // Initial state\n        isConnected: false,\n        isConnecting: false,\n        walletState: null,\n        error: null,\n        // Actions\n        connect: async ()=>{\n            set({\n                isConnecting: true,\n                error: null\n            });\n            try {\n                var _window_midnight;\n                // Check if Midnight Lace wallet is available\n                if ( false || !((_window_midnight = window.midnight) === null || _window_midnight === void 0 ? void 0 : _window_midnight.mnLace)) {\n                    throw new Error(\"Midnight Lace wallet not found. Please install the extension.\");\n                }\n                const api = window.midnight.mnLace;\n                // Check if already enabled\n                const isEnabled = await api.isEnabled();\n                if (!isEnabled) {\n                    // Request permission\n                    await api.enable();\n                }\n                // Get wallet state\n                const walletState = {\n                    address: \"midnight1234...5678\",\n                    publicKey: null,\n                    chainId: \"midnight-testnet\",\n                    balances: [],\n                    isConnected: true,\n                    isLocked: false\n                };\n                set({\n                    isConnected: true,\n                    isConnecting: false,\n                    walletState,\n                    error: null\n                });\n            } catch (error) {\n                set({\n                    isConnecting: false,\n                    error: error instanceof Error ? error.message : \"Failed to connect wallet\"\n                });\n                throw error;\n            }\n        },\n        disconnect: async ()=>{\n            set({\n                isConnected: false,\n                walletState: null,\n                hasCompletedOnboarding: false,\n                setHasCompletedOnboarding: (status)=>set({\n                        hasCompletedOnboarding: status\n                    }),\n                error: null\n            });\n        },\n        refreshState: async ()=>{\n            const { isConnected } = get();\n            if (isConnected) {\n            // Refresh wallet state logic here\n            }\n        },\n        clearError: ()=>{\n            set({\n                error: null\n            });\n        }\n    })) // Global type declarations removed - using official types from @midnight-ntwrk/dapp-connector-api\n;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvc3RvcmVzL3dhbGxldFN0b3JlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdDO0FBOEJ6QixNQUFNQyxpQkFBaUJELCtDQUFNQSxDQUFjLENBQUNFLEtBQUtDLE1BQVM7UUFDL0QsZ0JBQWdCO1FBQ2hCQyxhQUFhO1FBQ2JDLGNBQWM7UUFDZEMsYUFBYTtRQUNiQyxPQUFPO1FBRVAsVUFBVTtRQUNWQyxTQUFTO1lBQ1BOLElBQUk7Z0JBQUVHLGNBQWM7Z0JBQU1FLE9BQU87WUFBSztZQUV0QyxJQUFJO29CQUVvQ0U7Z0JBRHRDLDZDQUE2QztnQkFDN0MsSUFBSSxNQUFrQixJQUFlLEdBQUNBLG1CQUFBQSxPQUFPQyxRQUFRLGNBQWZELHVDQUFBQSxpQkFBaUJFLE1BQU0sR0FBRTtvQkFDN0QsTUFBTSxJQUFJQyxNQUFNO2dCQUNsQjtnQkFFQSxNQUFNQyxNQUFNSixPQUFPQyxRQUFRLENBQUNDLE1BQU07Z0JBRWxDLDJCQUEyQjtnQkFDM0IsTUFBTUcsWUFBWSxNQUFNRCxJQUFJQyxTQUFTO2dCQUVyQyxJQUFJLENBQUNBLFdBQVc7b0JBQ2QscUJBQXFCO29CQUNyQixNQUFNRCxJQUFJRSxNQUFNO2dCQUNsQjtnQkFFQSxtQkFBbUI7Z0JBQ25CLE1BQU1ULGNBQTJCO29CQUMvQlUsU0FBUztvQkFDVEMsV0FBVztvQkFDWEMsU0FBUztvQkFDVEMsVUFBVSxFQUFFO29CQUNaZixhQUFhO29CQUNiZ0IsVUFBVTtnQkFDWjtnQkFFQWxCLElBQUk7b0JBQ0ZFLGFBQWE7b0JBQ2JDLGNBQWM7b0JBQ2RDO29CQUNBQyxPQUFPO2dCQUNUO1lBQ0YsRUFBRSxPQUFPQSxPQUFPO2dCQUNkTCxJQUFJO29CQUNGRyxjQUFjO29CQUNkRSxPQUFPQSxpQkFBaUJLLFFBQVFMLE1BQU1jLE9BQU8sR0FBRztnQkFDbEQ7Z0JBQ0EsTUFBTWQ7WUFDUjtRQUNGO1FBRUFlLFlBQVk7WUFDVnBCLElBQUk7Z0JBQ0ZFLGFBQWE7Z0JBQ2JFLGFBQWE7Z0JBQ2ZpQix3QkFBd0I7Z0JBQ3hCQywyQkFBMkIsQ0FBQ0MsU0FBb0J2QixJQUFJO3dCQUFFcUIsd0JBQXdCRTtvQkFBTztnQkFDbkZsQixPQUFPO1lBQ1Q7UUFDRjtRQUVBbUIsY0FBYztZQUNaLE1BQU0sRUFBRXRCLFdBQVcsRUFBRSxHQUFHRDtZQUN4QixJQUFJQyxhQUFhO1lBQ2Ysa0NBQWtDO1lBQ3BDO1FBQ0Y7UUFFQXVCLFlBQVk7WUFDVnpCLElBQUk7Z0JBQUVLLE9BQU87WUFBSztRQUNwQjtJQUNGLElBRUEsa0dBQWtHO0NBRi9GIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvc3RvcmVzL3dhbGxldFN0b3JlLnRzPzY1NmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlIH0gZnJvbSAnenVzdGFuZCdcclxuXHJcbmludGVyZmFjZSBXYWxsZXRTdGF0ZSB7XHJcbiAgYWRkcmVzczogc3RyaW5nIHwgbnVsbFxyXG4gIHB1YmxpY0tleTogc3RyaW5nIHwgbnVsbFxyXG4gIGNoYWluSWQ6IHN0cmluZ1xyXG4gIGJhbGFuY2VzOiBhbnlbXVxyXG4gIGlzQ29ubmVjdGVkOiBib29sZWFuXHJcbiAgaXNMb2NrZWQ6IGJvb2xlYW5cclxufVxyXG5cclxuaW50ZXJmYWNlIFdhbGxldFN0b3JlIHtcclxuICAvLyBTdGF0ZVxyXG4gIGlzQ29ubmVjdGVkOiBib29sZWFuXHJcbiAgaXNDb25uZWN0aW5nOiBib29sZWFuXHJcbiAgd2FsbGV0U3RhdGU6IFdhbGxldFN0YXRlIHwgbnVsbFxyXG4gIGhhc0NvbXBsZXRlZE9uYm9hcmRpbmc6IGJvb2xlYW47XHJcbiAgc2V0SGFzQ29tcGxldGVkT25ib2FyZGluZzogKHN0YXR1czogYm9vbGVhbikgPT4gdm9pZDtcclxuICBydWxlczogYW55W107XHJcbiAgYWRkUnVsZTogKHJ1bGU6IGFueSkgPT4gdm9pZDtcclxuICByZW1vdmVSdWxlOiAocnVsZUlkOiBudW1iZXIpID0+IHZvaWQ7XHJcbiAgZXJyb3I6IHN0cmluZyB8IG51bGxcclxuICBcclxuICAvLyBBY3Rpb25zXHJcbiAgY29ubmVjdDogKCkgPT4gUHJvbWlzZTx2b2lkPlxyXG4gIGRpc2Nvbm5lY3Q6ICgpID0+IFByb21pc2U8dm9pZD5cclxuICByZWZyZXNoU3RhdGU6ICgpID0+IFByb21pc2U8dm9pZD5cclxuICBjbGVhckVycm9yOiAoKSA9PiB2b2lkXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCB1c2VXYWxsZXRTdG9yZSA9IGNyZWF0ZTxXYWxsZXRTdG9yZT4oKHNldCwgZ2V0KSA9PiAoe1xyXG4gIC8vIEluaXRpYWwgc3RhdGVcclxuICBpc0Nvbm5lY3RlZDogZmFsc2UsXHJcbiAgaXNDb25uZWN0aW5nOiBmYWxzZSxcclxuICB3YWxsZXRTdGF0ZTogbnVsbCxcclxuICBlcnJvcjogbnVsbCxcclxuXHJcbiAgLy8gQWN0aW9uc1xyXG4gIGNvbm5lY3Q6IGFzeW5jICgpID0+IHtcclxuICAgIHNldCh7IGlzQ29ubmVjdGluZzogdHJ1ZSwgZXJyb3I6IG51bGwgfSlcclxuICAgIFxyXG4gICAgdHJ5IHtcclxuICAgICAgLy8gQ2hlY2sgaWYgTWlkbmlnaHQgTGFjZSB3YWxsZXQgaXMgYXZhaWxhYmxlXHJcbiAgICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJyB8fCAhd2luZG93Lm1pZG5pZ2h0Py5tbkxhY2UpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ01pZG5pZ2h0IExhY2Ugd2FsbGV0IG5vdCBmb3VuZC4gUGxlYXNlIGluc3RhbGwgdGhlIGV4dGVuc2lvbi4nKVxyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCBhcGkgPSB3aW5kb3cubWlkbmlnaHQubW5MYWNlXHJcbiAgICAgIFxyXG4gICAgICAvLyBDaGVjayBpZiBhbHJlYWR5IGVuYWJsZWRcclxuICAgICAgY29uc3QgaXNFbmFibGVkID0gYXdhaXQgYXBpLmlzRW5hYmxlZCgpXHJcbiAgICAgIFxyXG4gICAgICBpZiAoIWlzRW5hYmxlZCkge1xyXG4gICAgICAgIC8vIFJlcXVlc3QgcGVybWlzc2lvblxyXG4gICAgICAgIGF3YWl0IGFwaS5lbmFibGUoKVxyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBHZXQgd2FsbGV0IHN0YXRlXHJcbiAgICAgIGNvbnN0IHdhbGxldFN0YXRlOiBXYWxsZXRTdGF0ZSA9IHtcclxuICAgICAgICBhZGRyZXNzOiAnbWlkbmlnaHQxMjM0Li4uNTY3OCcsIC8vIFBsYWNlaG9sZGVyXHJcbiAgICAgICAgcHVibGljS2V5OiBudWxsLFxyXG4gICAgICAgIGNoYWluSWQ6ICdtaWRuaWdodC10ZXN0bmV0JyxcclxuICAgICAgICBiYWxhbmNlczogW10sXHJcbiAgICAgICAgaXNDb25uZWN0ZWQ6IHRydWUsXHJcbiAgICAgICAgaXNMb2NrZWQ6IGZhbHNlLFxyXG4gICAgICB9XHJcblxyXG4gICAgICBzZXQoeyBcclxuICAgICAgICBpc0Nvbm5lY3RlZDogdHJ1ZSwgXHJcbiAgICAgICAgaXNDb25uZWN0aW5nOiBmYWxzZSwgXHJcbiAgICAgICAgd2FsbGV0U3RhdGUsXHJcbiAgICAgICAgZXJyb3I6IG51bGwgXHJcbiAgICAgIH0pXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBzZXQoeyBcclxuICAgICAgICBpc0Nvbm5lY3Rpbmc6IGZhbHNlLCBcclxuICAgICAgICBlcnJvcjogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnRmFpbGVkIHRvIGNvbm5lY3Qgd2FsbGV0JyBcclxuICAgICAgfSlcclxuICAgICAgdGhyb3cgZXJyb3JcclxuICAgIH1cclxuICB9LFxyXG5cclxuICBkaXNjb25uZWN0OiBhc3luYyAoKSA9PiB7XHJcbiAgICBzZXQoeyBcclxuICAgICAgaXNDb25uZWN0ZWQ6IGZhbHNlLCBcclxuICAgICAgd2FsbGV0U3RhdGU6IG51bGwsXHJcbiAgICBoYXNDb21wbGV0ZWRPbmJvYXJkaW5nOiBmYWxzZSwgLy8gRGVmYXVsdCB0byBmYWxzZVxyXG4gICAgc2V0SGFzQ29tcGxldGVkT25ib2FyZGluZzogKHN0YXR1czogYm9vbGVhbikgPT4gc2V0KHsgaGFzQ29tcGxldGVkT25ib2FyZGluZzogc3RhdHVzIH0pLCBcclxuICAgICAgZXJyb3I6IG51bGwgXHJcbiAgICB9KVxyXG4gIH0sXHJcblxyXG4gIHJlZnJlc2hTdGF0ZTogYXN5bmMgKCkgPT4ge1xyXG4gICAgY29uc3QgeyBpc0Nvbm5lY3RlZCB9ID0gZ2V0KClcclxuICAgIGlmIChpc0Nvbm5lY3RlZCkge1xyXG4gICAgICAvLyBSZWZyZXNoIHdhbGxldCBzdGF0ZSBsb2dpYyBoZXJlXHJcbiAgICB9XHJcbiAgfSxcclxuXHJcbiAgY2xlYXJFcnJvcjogKCkgPT4ge1xyXG4gICAgc2V0KHsgZXJyb3I6IG51bGwgfSlcclxuICB9LFxyXG59KSlcclxuXHJcbi8vIEdsb2JhbCB0eXBlIGRlY2xhcmF0aW9ucyByZW1vdmVkIC0gdXNpbmcgb2ZmaWNpYWwgdHlwZXMgZnJvbSBAbWlkbmlnaHQtbnR3cmsvZGFwcC1jb25uZWN0b3ItYXBpIl0sIm5hbWVzIjpbImNyZWF0ZSIsInVzZVdhbGxldFN0b3JlIiwic2V0IiwiZ2V0IiwiaXNDb25uZWN0ZWQiLCJpc0Nvbm5lY3RpbmciLCJ3YWxsZXRTdGF0ZSIsImVycm9yIiwiY29ubmVjdCIsIndpbmRvdyIsIm1pZG5pZ2h0IiwibW5MYWNlIiwiRXJyb3IiLCJhcGkiLCJpc0VuYWJsZWQiLCJlbmFibGUiLCJhZGRyZXNzIiwicHVibGljS2V5IiwiY2hhaW5JZCIsImJhbGFuY2VzIiwiaXNMb2NrZWQiLCJtZXNzYWdlIiwiZGlzY29ubmVjdCIsImhhc0NvbXBsZXRlZE9uYm9hcmRpbmciLCJzZXRIYXNDb21wbGV0ZWRPbmJvYXJkaW5nIiwic3RhdHVzIiwicmVmcmVzaFN0YXRlIiwiY2xlYXJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/stores/walletStore.ts\n"));

/***/ })

});
"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(onboarding)/preferences/page",{

/***/ "(app-pages-browser)/./src/lib/stores/walletStore.ts":
/*!***************************************!*\
  !*** ./src/lib/stores/walletStore.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useWalletStore: function() { return /* binding */ useWalletStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ useWalletStore auto */ \nconst useWalletStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)((set)=>({\n        // Initial state\n        isConnected: false,\n        isConnecting: false,\n        walletState: null,\n        error: null,\n        hasCompletedOnboarding: false,\n        rules: [],\n        verificationState: {\n            selfie: \"idle\",\n            id: \"idle\",\n            education: \"idle\",\n            income: \"idle\"\n        },\n        // --- ACTIONS ---\n        connect: async ()=>{\n            set({\n                isConnecting: true,\n                error: null\n            });\n            try {\n                var _window_midnight;\n                if ( false || !((_window_midnight = window.midnight) === null || _window_midnight === void 0 ? void 0 : _window_midnight.mnLace)) {\n                    throw new Error(\"Midnight Lace wallet not found. Please install the extension.\");\n                }\n                const api = window.midnight.mnLace;\n                const isEnabled = await api.isEnabled();\n                if (!isEnabled) {\n                    await api.enable();\n                }\n                // In a real app, you would get this data from the API\n                const walletState = {\n                    address: \"midnight1q...5678\",\n                    publicKey: null,\n                    chainId: \"midnight-testnet\",\n                    balances: [],\n                    isConnected: true,\n                    isLocked: false\n                };\n                set({\n                    isConnected: true,\n                    isConnecting: false,\n                    walletState,\n                    error: null\n                });\n            } catch (error) {\n                const errorMessage = error instanceof Error ? error.message : \"Failed to connect wallet\";\n                set({\n                    isConnecting: false,\n                    error: errorMessage\n                });\n                throw error;\n            }\n        },\n        disconnect: async ()=>{\n            // In a real app, you might need to call a disconnect method from the wallet API\n            set({\n                isConnected: false,\n                walletState: null,\n                error: null\n            });\n        },\n        clearError: ()=>{\n            set({\n                error: null\n            });\n        },\n        setHasCompletedOnboarding: (status)=>{\n            set({\n                hasCompletedOnboarding: status\n            });\n        },\n        addRule: (rule)=>{\n            set((state)=>({\n                    rules: [\n                        ...state.rules,\n                        rule\n                    ]\n                }));\n        },\n        removeRule: (ruleId)=>{\n            set((state)=>({\n                    rules: state.rules.filter((r)=>r.id !== ruleId)\n                }));\n        },\n        setVerificationStatus: (key, status)=>{\n            set((state)=>({\n                    verificationState: {\n                        ...state.verificationState,\n                        [key]: status\n                    }\n                }));\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvc3RvcmVzL3dhbGxldFN0b3JlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O29FQUVpQztBQWtDMUIsTUFBTUMsaUJBQWlCRCwrQ0FBTUEsQ0FBbUIsQ0FBQ0UsTUFBUztRQUMvRCxnQkFBZ0I7UUFDaEJDLGFBQWE7UUFDYkMsY0FBYztRQUNkQyxhQUFhO1FBQ2JDLE9BQU87UUFDUEMsd0JBQXdCO1FBQ3hCQyxPQUFPLEVBQUU7UUFDVEMsbUJBQW1CO1lBQUVDLFFBQVE7WUFBUUMsSUFBSTtZQUFRQyxXQUFXO1lBQVFDLFFBQVE7UUFBTztRQUVuRixrQkFBa0I7UUFFbEJDLFNBQVM7WUFDUFosSUFBSTtnQkFBRUUsY0FBYztnQkFBTUUsT0FBTztZQUFLO1lBQ3RDLElBQUk7b0JBQ29DUztnQkFBdEMsSUFBSSxNQUFrQixJQUFlLEdBQUNBLG1CQUFBQSxPQUFPQyxRQUFRLGNBQWZELHVDQUFBQSxpQkFBaUJFLE1BQU0sR0FBRTtvQkFDN0QsTUFBTSxJQUFJQyxNQUFNO2dCQUNsQjtnQkFDQSxNQUFNQyxNQUFNSixPQUFPQyxRQUFRLENBQUNDLE1BQU07Z0JBQ2xDLE1BQU1HLFlBQVksTUFBTUQsSUFBSUMsU0FBUztnQkFDckMsSUFBSSxDQUFDQSxXQUFXO29CQUNkLE1BQU1ELElBQUlFLE1BQU07Z0JBQ2xCO2dCQUNBLHNEQUFzRDtnQkFDdEQsTUFBTWhCLGNBQTJCO29CQUMvQmlCLFNBQVM7b0JBQ1RDLFdBQVc7b0JBQ1hDLFNBQVM7b0JBQ1RDLFVBQVUsRUFBRTtvQkFDWnRCLGFBQWE7b0JBQ2J1QixVQUFVO2dCQUNaO2dCQUNBeEIsSUFBSTtvQkFBRUMsYUFBYTtvQkFBTUMsY0FBYztvQkFBT0M7b0JBQWFDLE9BQU87Z0JBQUs7WUFDekUsRUFBRSxPQUFPQSxPQUFPO2dCQUNkLE1BQU1xQixlQUFlckIsaUJBQWlCWSxRQUFRWixNQUFNc0IsT0FBTyxHQUFHO2dCQUM5RDFCLElBQUk7b0JBQUVFLGNBQWM7b0JBQU9FLE9BQU9xQjtnQkFBYTtnQkFDL0MsTUFBTXJCO1lBQ1I7UUFDRjtRQUVBdUIsWUFBWTtZQUNWLGdGQUFnRjtZQUNoRjNCLElBQUk7Z0JBQUVDLGFBQWE7Z0JBQU9FLGFBQWE7Z0JBQU1DLE9BQU87WUFBSztRQUMzRDtRQUVBd0IsWUFBWTtZQUNWNUIsSUFBSTtnQkFBRUksT0FBTztZQUFLO1FBQ3BCO1FBRUF5QiwyQkFBMkIsQ0FBQ0M7WUFDMUI5QixJQUFJO2dCQUFFSyx3QkFBd0J5QjtZQUFPO1FBQ3ZDO1FBRUFDLFNBQVMsQ0FBQ0M7WUFDUmhDLElBQUksQ0FBQ2lDLFFBQVc7b0JBQUUzQixPQUFPOzJCQUFJMkIsTUFBTTNCLEtBQUs7d0JBQUUwQjtxQkFBSztnQkFBQztRQUNsRDtRQUVBRSxZQUFZLENBQUNDO1lBQ1huQyxJQUFJLENBQUNpQyxRQUFXO29CQUFFM0IsT0FBTzJCLE1BQU0zQixLQUFLLENBQUM4QixNQUFNLENBQUMsQ0FBQ0MsSUFBTUEsRUFBRTVCLEVBQUUsS0FBSzBCO2dCQUFRO1FBQ3RFO1FBRUFHLHVCQUF1QixDQUFDQyxLQUFhVDtZQUNuQzlCLElBQUksQ0FBQ2lDLFFBQVc7b0JBQ2QxQixtQkFBbUI7d0JBQUUsR0FBRzBCLE1BQU0xQixpQkFBaUI7d0JBQUUsQ0FBQ2dDLElBQUksRUFBRVQ7b0JBQU87Z0JBQ2pFO1FBQ0Y7SUFDRixJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvc3RvcmVzL3dhbGxldFN0b3JlLnRzPzY1NmIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgeyBjcmVhdGUgfSBmcm9tICd6dXN0YW5kJztcblxuLy8gRGVmaW5lIGludGVyZmFjZXMgZm9yIG91ciBzdGF0ZVxuaW50ZXJmYWNlIFdhbGxldFN0YXRlIHtcbiAgYWRkcmVzczogc3RyaW5nIHwgbnVsbDtcbiAgcHVibGljS2V5OiBzdHJpbmcgfCBudWxsO1xuICBjaGFpbklkOiBzdHJpbmc7XG4gIGJhbGFuY2VzOiBhbnlbXTtcbiAgaXNDb25uZWN0ZWQ6IGJvb2xlYW47XG4gIGlzTG9ja2VkOiBib29sZWFuO1xufVxuXG5pbnRlcmZhY2UgV2FsbGV0U3RvcmVTdGF0ZSB7XG4gIC8vIFdhbGxldCBDb25uZWN0aW9uIFN0YXRlXG4gIGlzQ29ubmVjdGVkOiBib29sZWFuO1xuICBpc0Nvbm5lY3Rpbmc6IGJvb2xlYW47XG4gIHdhbGxldFN0YXRlOiBXYWxsZXRTdGF0ZSB8IG51bGw7XG4gIGVycm9yOiBzdHJpbmcgfCBudWxsO1xuXG4gIC8vIE9uYm9hcmRpbmcgU3RhdGVcbiAgaGFzQ29tcGxldGVkT25ib2FyZGluZzogYm9vbGVhbjtcbiAgcnVsZXM6IGFueVtdO1xuICB2ZXJpZmljYXRpb25TdGF0ZTogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfTtcblxuICAvLyBBY3Rpb25zXG4gIGNvbm5lY3Q6ICgpID0+IFByb21pc2U8dm9pZD47XG4gIGRpc2Nvbm5lY3Q6ICgpID0+IFByb21pc2U8dm9pZD47XG4gIGNsZWFyRXJyb3I6ICgpID0+IHZvaWQ7XG4gIHNldEhhc0NvbXBsZXRlZE9uYm9hcmRpbmc6IChzdGF0dXM6IGJvb2xlYW4pID0+IHZvaWQ7XG4gIGFkZFJ1bGU6IChydWxlOiBhbnkpID0+IHZvaWQ7XG4gIHJlbW92ZVJ1bGU6IChydWxlSWQ6IG51bWJlcikgPT4gdm9pZDtcbiAgc2V0VmVyaWZpY2F0aW9uU3RhdHVzOiAoa2V5OiBzdHJpbmcsIHN0YXR1czogc3RyaW5nKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgY29uc3QgdXNlV2FsbGV0U3RvcmUgPSBjcmVhdGU8V2FsbGV0U3RvcmVTdGF0ZT4oKHNldCkgPT4gKHtcbiAgLy8gSW5pdGlhbCBzdGF0ZVxuICBpc0Nvbm5lY3RlZDogZmFsc2UsXG4gIGlzQ29ubmVjdGluZzogZmFsc2UsXG4gIHdhbGxldFN0YXRlOiBudWxsLFxuICBlcnJvcjogbnVsbCxcbiAgaGFzQ29tcGxldGVkT25ib2FyZGluZzogZmFsc2UsXG4gIHJ1bGVzOiBbXSxcbiAgdmVyaWZpY2F0aW9uU3RhdGU6IHsgc2VsZmllOiAnaWRsZScsIGlkOiAnaWRsZScsIGVkdWNhdGlvbjogJ2lkbGUnLCBpbmNvbWU6ICdpZGxlJyB9LFxuXG4gIC8vIC0tLSBBQ1RJT05TIC0tLVxuXG4gIGNvbm5lY3Q6IGFzeW5jICgpID0+IHtcbiAgICBzZXQoeyBpc0Nvbm5lY3Rpbmc6IHRydWUsIGVycm9yOiBudWxsIH0pO1xuICAgIHRyeSB7XG4gICAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgfHwgIXdpbmRvdy5taWRuaWdodD8ubW5MYWNlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTWlkbmlnaHQgTGFjZSB3YWxsZXQgbm90IGZvdW5kLiBQbGVhc2UgaW5zdGFsbCB0aGUgZXh0ZW5zaW9uLicpO1xuICAgICAgfVxuICAgICAgY29uc3QgYXBpID0gd2luZG93Lm1pZG5pZ2h0Lm1uTGFjZTtcbiAgICAgIGNvbnN0IGlzRW5hYmxlZCA9IGF3YWl0IGFwaS5pc0VuYWJsZWQoKTtcbiAgICAgIGlmICghaXNFbmFibGVkKSB7XG4gICAgICAgIGF3YWl0IGFwaS5lbmFibGUoKTtcbiAgICAgIH1cbiAgICAgIC8vIEluIGEgcmVhbCBhcHAsIHlvdSB3b3VsZCBnZXQgdGhpcyBkYXRhIGZyb20gdGhlIEFQSVxuICAgICAgY29uc3Qgd2FsbGV0U3RhdGU6IFdhbGxldFN0YXRlID0ge1xuICAgICAgICBhZGRyZXNzOiAnbWlkbmlnaHQxcS4uLjU2NzgnLFxuICAgICAgICBwdWJsaWNLZXk6IG51bGwsXG4gICAgICAgIGNoYWluSWQ6ICdtaWRuaWdodC10ZXN0bmV0JyxcbiAgICAgICAgYmFsYW5jZXM6IFtdLFxuICAgICAgICBpc0Nvbm5lY3RlZDogdHJ1ZSxcbiAgICAgICAgaXNMb2NrZWQ6IGZhbHNlLFxuICAgICAgfTtcbiAgICAgIHNldCh7IGlzQ29ubmVjdGVkOiB0cnVlLCBpc0Nvbm5lY3Rpbmc6IGZhbHNlLCB3YWxsZXRTdGF0ZSwgZXJyb3I6IG51bGwgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ0ZhaWxlZCB0byBjb25uZWN0IHdhbGxldCc7XG4gICAgICBzZXQoeyBpc0Nvbm5lY3Rpbmc6IGZhbHNlLCBlcnJvcjogZXJyb3JNZXNzYWdlIH0pO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICB9LFxuXG4gIGRpc2Nvbm5lY3Q6IGFzeW5jICgpID0+IHtcbiAgICAvLyBJbiBhIHJlYWwgYXBwLCB5b3UgbWlnaHQgbmVlZCB0byBjYWxsIGEgZGlzY29ubmVjdCBtZXRob2QgZnJvbSB0aGUgd2FsbGV0IEFQSVxuICAgIHNldCh7IGlzQ29ubmVjdGVkOiBmYWxzZSwgd2FsbGV0U3RhdGU6IG51bGwsIGVycm9yOiBudWxsIH0pO1xuICB9LFxuXG4gIGNsZWFyRXJyb3I6ICgpID0+IHtcbiAgICBzZXQoeyBlcnJvcjogbnVsbCB9KTtcbiAgfSxcblxuICBzZXRIYXNDb21wbGV0ZWRPbmJvYXJkaW5nOiAoc3RhdHVzOiBib29sZWFuKSA9PiB7XG4gICAgc2V0KHsgaGFzQ29tcGxldGVkT25ib2FyZGluZzogc3RhdHVzIH0pO1xuICB9LFxuXG4gIGFkZFJ1bGU6IChydWxlOiBhbnkpID0+IHtcbiAgICBzZXQoKHN0YXRlKSA9PiAoeyBydWxlczogWy4uLnN0YXRlLnJ1bGVzLCBydWxlXSB9KSk7XG4gIH0sXG5cbiAgcmVtb3ZlUnVsZTogKHJ1bGVJZDogbnVtYmVyKSA9PiB7XG4gICAgc2V0KChzdGF0ZSkgPT4gKHsgcnVsZXM6IHN0YXRlLnJ1bGVzLmZpbHRlcigocikgPT4gci5pZCAhPT0gcnVsZUlkKSB9KSk7XG4gIH0sXG5cbiAgc2V0VmVyaWZpY2F0aW9uU3RhdHVzOiAoa2V5OiBzdHJpbmcsIHN0YXR1czogc3RyaW5nKSA9PiB7XG4gICAgc2V0KChzdGF0ZSkgPT4gKHtcbiAgICAgIHZlcmlmaWNhdGlvblN0YXRlOiB7IC4uLnN0YXRlLnZlcmlmaWNhdGlvblN0YXRlLCBba2V5XTogc3RhdHVzIH0sXG4gICAgfSkpO1xuICB9LFxufSkpO1xuXG5kZWNsYXJlIGdsb2JhbCB7XG4gIGludGVyZmFjZSBXaW5kb3cge1xuICAgIG1pZG5pZ2h0Pzoge1xuICAgICAgbW5MYWNlPzogYW55OyAvLyBVc2UgYSBtb3JlIHNwZWNpZmljIHR5cGUgZnJvbSB0aGUgd2FsbGV0IGNvbm5lY3RvciBBUEkgaWYgYXZhaWxhYmxlXG4gICAgfTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbImNyZWF0ZSIsInVzZVdhbGxldFN0b3JlIiwic2V0IiwiaXNDb25uZWN0ZWQiLCJpc0Nvbm5lY3RpbmciLCJ3YWxsZXRTdGF0ZSIsImVycm9yIiwiaGFzQ29tcGxldGVkT25ib2FyZGluZyIsInJ1bGVzIiwidmVyaWZpY2F0aW9uU3RhdGUiLCJzZWxmaWUiLCJpZCIsImVkdWNhdGlvbiIsImluY29tZSIsImNvbm5lY3QiLCJ3aW5kb3ciLCJtaWRuaWdodCIsIm1uTGFjZSIsIkVycm9yIiwiYXBpIiwiaXNFbmFibGVkIiwiZW5hYmxlIiwiYWRkcmVzcyIsInB1YmxpY0tleSIsImNoYWluSWQiLCJiYWxhbmNlcyIsImlzTG9ja2VkIiwiZXJyb3JNZXNzYWdlIiwibWVzc2FnZSIsImRpc2Nvbm5lY3QiLCJjbGVhckVycm9yIiwic2V0SGFzQ29tcGxldGVkT25ib2FyZGluZyIsInN0YXR1cyIsImFkZFJ1bGUiLCJydWxlIiwic3RhdGUiLCJyZW1vdmVSdWxlIiwicnVsZUlkIiwiZmlsdGVyIiwiciIsInNldFZlcmlmaWNhdGlvblN0YXR1cyIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/stores/walletStore.ts\n"));

/***/ })

});
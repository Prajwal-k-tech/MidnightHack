"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/stores/walletStore.ts":
/*!***************************************!*\
  !*** ./src/lib/stores/walletStore.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useWalletStore: function() { return /* binding */ useWalletStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n\nconst useWalletStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)((set, get)=>({\n        // Initial state\n        isConnected: false,\n        isConnecting: false,\n        walletState: null,\n        error: null,\n        // Actions\n        connect: async ()=>{\n            set({\n                isConnecting: true,\n                error: null\n            });\n            try {\n                var _window_midnight;\n                // Check if Midnight Lace wallet is available\n                if ( false || !((_window_midnight = window.midnight) === null || _window_midnight === void 0 ? void 0 : _window_midnight.mnLace)) {\n                    throw new Error(\"Midnight Lace wallet not found. Please install the extension.\");\n                }\n                const api = window.midnight.mnLace;\n                // Check if already enabled\n                const isEnabled = await api.isEnabled();\n                if (!isEnabled) {\n                    // Request permission\n                    await api.enable();\n                }\n                // Get wallet state\n                const walletState = {\n                    address: \"midnight1234...5678\",\n                    publicKey: null,\n                    chainId: \"midnight-testnet\",\n                    balances: [],\n                    isConnected: true,\n                    isLocked: false\n                };\n                set({\n                    isConnected: true,\n                    isConnecting: false,\n                    walletState,\n                    error: null\n                });\n            } catch (error) {\n                set({\n                    isConnecting: false,\n                    error: error instanceof Error ? error.message : \"Failed to connect wallet\"\n                });\n                throw error;\n            }\n        },\n        disconnect: async ()=>{\n            set({\n                isConnected: false,\n                walletState: null,\n                hasCompletedOnboarding: false,\n                setHasCompletedOnboarding: (status)=>set({\n                        hasCompletedOnboarding: status\n                    }),\n                rules: [],\n                addRule: (rule)=>set((state)=>({\n                            rules: [\n                                ...state.rules,\n                                rule\n                            ]\n                        })),\n                removeRule: (ruleId)=>set((state)=>({\n                            rules: state.rules.filter((r)=>r.id !== ruleId)\n                        })),\n                verificationState: {\n                    selfie: \"idle\",\n                    id: \"idle\",\n                    education: \"idle\",\n                    income: \"idle\"\n                },\n                setVerificationStatus: (key, status)=>set((state)=>({\n                            verificationState: {\n                                ...state.verificationState,\n                                [key]: status\n                            }\n                        })),\n                error: null\n            });\n        },\n        refreshState: async ()=>{\n            const { isConnected } = get();\n            if (isConnected) {\n            // Refresh wallet state logic here\n            }\n        },\n        clearError: ()=>{\n            set({\n                error: null\n            });\n        }\n    })) // Global type declarations removed - using official types from @midnight-ntwrk/dapp-connector-api\n;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvc3RvcmVzL3dhbGxldFN0b3JlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdDO0FBZ0N6QixNQUFNQyxpQkFBaUJELCtDQUFNQSxDQUFjLENBQUNFLEtBQUtDLE1BQVM7UUFDL0QsZ0JBQWdCO1FBQ2hCQyxhQUFhO1FBQ2JDLGNBQWM7UUFDZEMsYUFBYTtRQUNiQyxPQUFPO1FBRVAsVUFBVTtRQUNWQyxTQUFTO1lBQ1BOLElBQUk7Z0JBQUVHLGNBQWM7Z0JBQU1FLE9BQU87WUFBSztZQUV0QyxJQUFJO29CQUVvQ0U7Z0JBRHRDLDZDQUE2QztnQkFDN0MsSUFBSSxNQUFrQixJQUFlLEdBQUNBLG1CQUFBQSxPQUFPQyxRQUFRLGNBQWZELHVDQUFBQSxpQkFBaUJFLE1BQU0sR0FBRTtvQkFDN0QsTUFBTSxJQUFJQyxNQUFNO2dCQUNsQjtnQkFFQSxNQUFNQyxNQUFNSixPQUFPQyxRQUFRLENBQUNDLE1BQU07Z0JBRWxDLDJCQUEyQjtnQkFDM0IsTUFBTUcsWUFBWSxNQUFNRCxJQUFJQyxTQUFTO2dCQUVyQyxJQUFJLENBQUNBLFdBQVc7b0JBQ2QscUJBQXFCO29CQUNyQixNQUFNRCxJQUFJRSxNQUFNO2dCQUNsQjtnQkFFQSxtQkFBbUI7Z0JBQ25CLE1BQU1ULGNBQTJCO29CQUMvQlUsU0FBUztvQkFDVEMsV0FBVztvQkFDWEMsU0FBUztvQkFDVEMsVUFBVSxFQUFFO29CQUNaZixhQUFhO29CQUNiZ0IsVUFBVTtnQkFDWjtnQkFFQWxCLElBQUk7b0JBQ0ZFLGFBQWE7b0JBQ2JDLGNBQWM7b0JBQ2RDO29CQUNBQyxPQUFPO2dCQUNUO1lBQ0YsRUFBRSxPQUFPQSxPQUFPO2dCQUNkTCxJQUFJO29CQUNGRyxjQUFjO29CQUNkRSxPQUFPQSxpQkFBaUJLLFFBQVFMLE1BQU1jLE9BQU8sR0FBRztnQkFDbEQ7Z0JBQ0EsTUFBTWQ7WUFDUjtRQUNGO1FBRUFlLFlBQVk7WUFDVnBCLElBQUk7Z0JBQ0ZFLGFBQWE7Z0JBQ2JFLGFBQWE7Z0JBQ2ZpQix3QkFBd0I7Z0JBQ3hCQywyQkFBMkIsQ0FBQ0MsU0FBb0J2QixJQUFJO3dCQUFFcUIsd0JBQXdCRTtvQkFBTztnQkFDckZDLE9BQU8sRUFBRTtnQkFDVEMsU0FBUyxDQUFDQyxPQUFjMUIsSUFBSTJCLENBQUFBLFFBQVU7NEJBQUVILE9BQU87bUNBQUlHLE1BQU1ILEtBQUs7Z0NBQUVFOzZCQUFLO3dCQUFDO2dCQUN0RUUsWUFBWSxDQUFDQyxTQUFtQjdCLElBQUkyQixDQUFBQSxRQUFVOzRCQUFFSCxPQUFPRyxNQUFNSCxLQUFLLENBQUNNLE1BQU0sQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRUMsRUFBRSxLQUFLSDt3QkFBUTtnQkFDaEdJLG1CQUFtQjtvQkFBRUMsUUFBUTtvQkFBUUYsSUFBSTtvQkFBUUcsV0FBVztvQkFBUUMsUUFBUTtnQkFBTztnQkFDbkZDLHVCQUF1QixDQUFDQyxLQUFhZixTQUFtQnZCLElBQUkyQixDQUFBQSxRQUFVOzRCQUFFTSxtQkFBbUI7Z0NBQUUsR0FBR04sTUFBTU0saUJBQWlCO2dDQUFFLENBQUNLLElBQUksRUFBRWY7NEJBQU87d0JBQUU7Z0JBQ3ZJbEIsT0FBTztZQUNUO1FBQ0Y7UUFFQWtDLGNBQWM7WUFDWixNQUFNLEVBQUVyQyxXQUFXLEVBQUUsR0FBR0Q7WUFDeEIsSUFBSUMsYUFBYTtZQUNmLGtDQUFrQztZQUNwQztRQUNGO1FBRUFzQyxZQUFZO1lBQ1Z4QyxJQUFJO2dCQUFFSyxPQUFPO1lBQUs7UUFDcEI7SUFDRixJQUVBLGtHQUFrRztDQUYvRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbGliL3N0b3Jlcy93YWxsZXRTdG9yZS50cz82NTZiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZSB9IGZyb20gJ3p1c3RhbmQnXHJcblxyXG5pbnRlcmZhY2UgV2FsbGV0U3RhdGUge1xyXG4gIGFkZHJlc3M6IHN0cmluZyB8IG51bGxcclxuICBwdWJsaWNLZXk6IHN0cmluZyB8IG51bGxcclxuICBjaGFpbklkOiBzdHJpbmdcclxuICBiYWxhbmNlczogYW55W11cclxuICBpc0Nvbm5lY3RlZDogYm9vbGVhblxyXG4gIGlzTG9ja2VkOiBib29sZWFuXHJcbn1cclxuXHJcbmludGVyZmFjZSBXYWxsZXRTdG9yZSB7XHJcbiAgLy8gU3RhdGVcclxuICBpc0Nvbm5lY3RlZDogYm9vbGVhblxyXG4gIGlzQ29ubmVjdGluZzogYm9vbGVhblxyXG4gIHdhbGxldFN0YXRlOiBXYWxsZXRTdGF0ZSB8IG51bGxcclxuICBoYXNDb21wbGV0ZWRPbmJvYXJkaW5nOiBib29sZWFuO1xyXG4gIHNldEhhc0NvbXBsZXRlZE9uYm9hcmRpbmc6IChzdGF0dXM6IGJvb2xlYW4pID0+IHZvaWQ7XHJcbiAgcnVsZXM6IGFueVtdO1xyXG4gIGFkZFJ1bGU6IChydWxlOiBhbnkpID0+IHZvaWQ7XHJcbiAgcmVtb3ZlUnVsZTogKHJ1bGVJZDogbnVtYmVyKSA9PiB2b2lkO1xyXG4gIHZlcmlmaWNhdGlvblN0YXRlOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9O1xyXG4gIHNldFZlcmlmaWNhdGlvblN0YXR1czogKGtleTogc3RyaW5nLCBzdGF0dXM6IHN0cmluZykgPT4gdm9pZDtcclxuICBlcnJvcjogc3RyaW5nIHwgbnVsbFxyXG4gIFxyXG4gIC8vIEFjdGlvbnNcclxuICBjb25uZWN0OiAoKSA9PiBQcm9taXNlPHZvaWQ+XHJcbiAgZGlzY29ubmVjdDogKCkgPT4gUHJvbWlzZTx2b2lkPlxyXG4gIHJlZnJlc2hTdGF0ZTogKCkgPT4gUHJvbWlzZTx2b2lkPlxyXG4gIGNsZWFyRXJyb3I6ICgpID0+IHZvaWRcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHVzZVdhbGxldFN0b3JlID0gY3JlYXRlPFdhbGxldFN0b3JlPigoc2V0LCBnZXQpID0+ICh7XHJcbiAgLy8gSW5pdGlhbCBzdGF0ZVxyXG4gIGlzQ29ubmVjdGVkOiBmYWxzZSxcclxuICBpc0Nvbm5lY3Rpbmc6IGZhbHNlLFxyXG4gIHdhbGxldFN0YXRlOiBudWxsLFxyXG4gIGVycm9yOiBudWxsLFxyXG5cclxuICAvLyBBY3Rpb25zXHJcbiAgY29ubmVjdDogYXN5bmMgKCkgPT4ge1xyXG4gICAgc2V0KHsgaXNDb25uZWN0aW5nOiB0cnVlLCBlcnJvcjogbnVsbCB9KVxyXG4gICAgXHJcbiAgICB0cnkge1xyXG4gICAgICAvLyBDaGVjayBpZiBNaWRuaWdodCBMYWNlIHdhbGxldCBpcyBhdmFpbGFibGVcclxuICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnIHx8ICF3aW5kb3cubWlkbmlnaHQ/Lm1uTGFjZSkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTWlkbmlnaHQgTGFjZSB3YWxsZXQgbm90IGZvdW5kLiBQbGVhc2UgaW5zdGFsbCB0aGUgZXh0ZW5zaW9uLicpXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbnN0IGFwaSA9IHdpbmRvdy5taWRuaWdodC5tbkxhY2VcclxuICAgICAgXHJcbiAgICAgIC8vIENoZWNrIGlmIGFscmVhZHkgZW5hYmxlZFxyXG4gICAgICBjb25zdCBpc0VuYWJsZWQgPSBhd2FpdCBhcGkuaXNFbmFibGVkKClcclxuICAgICAgXHJcbiAgICAgIGlmICghaXNFbmFibGVkKSB7XHJcbiAgICAgICAgLy8gUmVxdWVzdCBwZXJtaXNzaW9uXHJcbiAgICAgICAgYXdhaXQgYXBpLmVuYWJsZSgpXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIEdldCB3YWxsZXQgc3RhdGVcclxuICAgICAgY29uc3Qgd2FsbGV0U3RhdGU6IFdhbGxldFN0YXRlID0ge1xyXG4gICAgICAgIGFkZHJlc3M6ICdtaWRuaWdodDEyMzQuLi41Njc4JywgLy8gUGxhY2Vob2xkZXJcclxuICAgICAgICBwdWJsaWNLZXk6IG51bGwsXHJcbiAgICAgICAgY2hhaW5JZDogJ21pZG5pZ2h0LXRlc3RuZXQnLFxyXG4gICAgICAgIGJhbGFuY2VzOiBbXSxcclxuICAgICAgICBpc0Nvbm5lY3RlZDogdHJ1ZSxcclxuICAgICAgICBpc0xvY2tlZDogZmFsc2UsXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHNldCh7IFxyXG4gICAgICAgIGlzQ29ubmVjdGVkOiB0cnVlLCBcclxuICAgICAgICBpc0Nvbm5lY3Rpbmc6IGZhbHNlLCBcclxuICAgICAgICB3YWxsZXRTdGF0ZSxcclxuICAgICAgICBlcnJvcjogbnVsbCBcclxuICAgICAgfSlcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHNldCh7IFxyXG4gICAgICAgIGlzQ29ubmVjdGluZzogZmFsc2UsIFxyXG4gICAgICAgIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdGYWlsZWQgdG8gY29ubmVjdCB3YWxsZXQnIFxyXG4gICAgICB9KVxyXG4gICAgICB0aHJvdyBlcnJvclxyXG4gICAgfVxyXG4gIH0sXHJcblxyXG4gIGRpc2Nvbm5lY3Q6IGFzeW5jICgpID0+IHtcclxuICAgIHNldCh7IFxyXG4gICAgICBpc0Nvbm5lY3RlZDogZmFsc2UsIFxyXG4gICAgICB3YWxsZXRTdGF0ZTogbnVsbCxcclxuICAgIGhhc0NvbXBsZXRlZE9uYm9hcmRpbmc6IGZhbHNlLCAvLyBEZWZhdWx0IHRvIGZhbHNlXHJcbiAgICBzZXRIYXNDb21wbGV0ZWRPbmJvYXJkaW5nOiAoc3RhdHVzOiBib29sZWFuKSA9PiBzZXQoeyBoYXNDb21wbGV0ZWRPbmJvYXJkaW5nOiBzdGF0dXMgfSksXHJcbiAgICBydWxlczogW10sXHJcbiAgICBhZGRSdWxlOiAocnVsZTogYW55KSA9PiBzZXQoc3RhdGUgPT4gKHsgcnVsZXM6IFsuLi5zdGF0ZS5ydWxlcywgcnVsZV0gfSkpLFxyXG4gICAgcmVtb3ZlUnVsZTogKHJ1bGVJZDogbnVtYmVyKSA9PiBzZXQoc3RhdGUgPT4gKHsgcnVsZXM6IHN0YXRlLnJ1bGVzLmZpbHRlcihyID0+IHIuaWQgIT09IHJ1bGVJZCkgfSkpLFxyXG4gICAgdmVyaWZpY2F0aW9uU3RhdGU6IHsgc2VsZmllOiAnaWRsZScsIGlkOiAnaWRsZScsIGVkdWNhdGlvbjogJ2lkbGUnLCBpbmNvbWU6ICdpZGxlJyB9LFxyXG4gICAgc2V0VmVyaWZpY2F0aW9uU3RhdHVzOiAoa2V5OiBzdHJpbmcsIHN0YXR1czogc3RyaW5nKSA9PiBzZXQoc3RhdGUgPT4gKHsgdmVyaWZpY2F0aW9uU3RhdGU6IHsgLi4uc3RhdGUudmVyaWZpY2F0aW9uU3RhdGUsIFtrZXldOiBzdGF0dXMgfSB9KSksIFxyXG4gICAgICBlcnJvcjogbnVsbCBcclxuICAgIH0pXHJcbiAgfSxcclxuXHJcbiAgcmVmcmVzaFN0YXRlOiBhc3luYyAoKSA9PiB7XHJcbiAgICBjb25zdCB7IGlzQ29ubmVjdGVkIH0gPSBnZXQoKVxyXG4gICAgaWYgKGlzQ29ubmVjdGVkKSB7XHJcbiAgICAgIC8vIFJlZnJlc2ggd2FsbGV0IHN0YXRlIGxvZ2ljIGhlcmVcclxuICAgIH1cclxuICB9LFxyXG5cclxuICBjbGVhckVycm9yOiAoKSA9PiB7XHJcbiAgICBzZXQoeyBlcnJvcjogbnVsbCB9KVxyXG4gIH0sXHJcbn0pKVxyXG5cclxuLy8gR2xvYmFsIHR5cGUgZGVjbGFyYXRpb25zIHJlbW92ZWQgLSB1c2luZyBvZmZpY2lhbCB0eXBlcyBmcm9tIEBtaWRuaWdodC1udHdyay9kYXBwLWNvbm5lY3Rvci1hcGkiXSwibmFtZXMiOlsiY3JlYXRlIiwidXNlV2FsbGV0U3RvcmUiLCJzZXQiLCJnZXQiLCJpc0Nvbm5lY3RlZCIsImlzQ29ubmVjdGluZyIsIndhbGxldFN0YXRlIiwiZXJyb3IiLCJjb25uZWN0Iiwid2luZG93IiwibWlkbmlnaHQiLCJtbkxhY2UiLCJFcnJvciIsImFwaSIsImlzRW5hYmxlZCIsImVuYWJsZSIsImFkZHJlc3MiLCJwdWJsaWNLZXkiLCJjaGFpbklkIiwiYmFsYW5jZXMiLCJpc0xvY2tlZCIsIm1lc3NhZ2UiLCJkaXNjb25uZWN0IiwiaGFzQ29tcGxldGVkT25ib2FyZGluZyIsInNldEhhc0NvbXBsZXRlZE9uYm9hcmRpbmciLCJzdGF0dXMiLCJydWxlcyIsImFkZFJ1bGUiLCJydWxlIiwic3RhdGUiLCJyZW1vdmVSdWxlIiwicnVsZUlkIiwiZmlsdGVyIiwiciIsImlkIiwidmVyaWZpY2F0aW9uU3RhdGUiLCJzZWxmaWUiLCJlZHVjYXRpb24iLCJpbmNvbWUiLCJzZXRWZXJpZmljYXRpb25TdGF0dXMiLCJrZXkiLCJyZWZyZXNoU3RhdGUiLCJjbGVhckVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/stores/walletStore.ts\n"));

/***/ })

});
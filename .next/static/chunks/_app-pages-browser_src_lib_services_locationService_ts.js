"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_lib_services_locationService_ts"],{

/***/ "(app-pages-browser)/./src/lib/services/locationService.ts":
/*!*********************************************!*\
  !*** ./src/lib/services/locationService.ts ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocationService: function() { return /* binding */ LocationService; },\n/* harmony export */   locationService: function() { return /* binding */ locationService; }\n/* harmony export */ });\n/* __next_internal_client_entry_do_not_use__ LocationService,locationService auto */ // Browser-compatible crypto function\nconst createBrowserHash = async (data)=>{\n    if ( true && window.crypto && window.crypto.subtle) {\n        const encoder = new TextEncoder();\n        const dataBuffer = encoder.encode(data);\n        const hashBuffer = await window.crypto.subtle.digest(\"SHA-256\", dataBuffer);\n        const hashArray = Array.from(new Uint8Array(hashBuffer));\n        return hashArray.map((b)=>b.toString(16).padStart(2, \"0\")).join(\"\");\n    } else {\n        // Fallback for Node.js environments\n        const { createHash } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_next_dist_compiled_crypto-browserify_index_js\").then(__webpack_require__.t.bind(__webpack_require__, /*! crypto */ \"(app-pages-browser)/./node_modules/next/dist/compiled/crypto-browserify/index.js\", 23));\n        return createHash(\"sha256\").update(data).digest(\"hex\");\n    }\n};\n/**\n * 🔐 PRIVATE LOCATION SERVICE\n * Handles location-based matching with zero-knowledge privacy\n */ class LocationService {\n    /**\n   * Get user's current location with permission\n   */ async getCurrentLocation() {\n        return new Promise((resolve, reject)=>{\n            if (!navigator.geolocation) {\n                reject(new Error(\"Geolocation is not supported by this browser\"));\n                return;\n            }\n            navigator.geolocation.getCurrentPosition((position)=>{\n                const location = {\n                    latitude: position.coords.latitude,\n                    longitude: position.coords.longitude,\n                    accuracy: position.coords.accuracy,\n                    timestamp: Date.now()\n                };\n                this.currentLocation = location;\n                console.log(\"\\uD83D\\uDCCD Location obtained:\", {\n                    lat: location.latitude.toFixed(6),\n                    lng: location.longitude.toFixed(6),\n                    accuracy: location.accuracy\n                });\n                resolve(location);\n            }, (error)=>{\n                console.error(\"❌ Location error:\", error.message);\n                reject(new Error(\"Location access denied: \".concat(error.message)));\n            }, {\n                enableHighAccuracy: true,\n                timeout: 10000,\n                maximumAge: 300000 // 5 minutes cache\n            });\n        });\n    }\n    /**\n   * Create private location commitment (hash without revealing coordinates)\n   */ async createLocationCommitment(location) {\n        // Use coarse-grained location for privacy (rounded to ~1km precision)\n        const coarseLat = Math.round(location.latitude * 100) / 100;\n        const coarseLng = Math.round(location.longitude * 100) / 100;\n        const locationString = \"\".concat(coarseLat, \",\").concat(coarseLng);\n        return await createBrowserHash(locationString);\n    }\n    /**\n   * 🔒 ZERO-KNOWLEDGE PROXIMITY MATCHING\n   * Proves two users are within range without revealing exact locations\n   */ async proveProximity(myLocation, targetLocationHash) {\n        let maxDistanceKm = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 50;\n        console.log(\"\\uD83D\\uDD10 Starting ZK proximity proof...\");\n        // In production, this would be a real ZK circuit\n        // For demo, we simulate the privacy-preserving calculation\n        const myLocationHash = await this.createLocationCommitment(myLocation);\n        // Simulate the ZK proof calculation\n        // In reality, this would use the target's location commitment\n        // and prove proximity without revealing either location\n        await new Promise((resolve)=>setTimeout(resolve, 1000)); // Simulate proof time\n        // For demo: determine if locations are \"close\" based on hash similarity\n        const proximity = this.simulatePrivateProximityCheck(myLocationHash, targetLocationHash);\n        return {\n            locationHash: myLocationHash,\n            proximityProof: proximity.isClose,\n            distance: proximity.isClose ? proximity.approximateDistance : undefined\n        };\n    }\n    /**\n   * Simulate private proximity checking (would be ZK circuit in production)\n   */ simulatePrivateProximityCheck(hash1, hash2) {\n        // Convert hashes to numeric values for proximity simulation\n        const num1 = parseInt(hash1.substring(0, 8), 16);\n        const num2 = parseInt(hash2.substring(0, 8), 16);\n        const hashDiff = Math.abs(num1 - num2);\n        const maxDiff = 0xFFFFFFFF * 0.1; // Within 10% hash space = \"close\"\n        const isClose = hashDiff < maxDiff;\n        const approximateDistance = isClose ? Math.round(hashDiff / maxDiff * 50) : undefined;\n        console.log(\"\\uD83E\\uDDEE ZK Proximity Calculation:\", {\n            isClose,\n            approximateDistance: approximateDistance ? \"~\".concat(approximateDistance, \"km\") : \"Too far\"\n        });\n        return {\n            isClose,\n            approximateDistance\n        };\n    }\n    /**\n   * Get location display string without revealing exact coordinates\n   */ getPrivacyFriendlyLocation(location) {\n        // Show only city-level precision\n        const lat = Math.round(location.latitude * 10) / 10;\n        const lng = Math.round(location.longitude * 10) / 10;\n        return \"~\".concat(lat, \", \").concat(lng);\n    }\n    constructor(){\n        this.currentLocation = null;\n    }\n}\nconst locationService = new LocationService();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/services/locationService.ts\n"));

/***/ })

}]);